-- start_ignore
select sess_id from pg_stat_activity where pg_backend_pid()=pid;
 sess_id 
---------
      26
(1 row)

\gset
-- end_ignore
CREATE TABLE foo(a int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Cloudberry Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE test(a int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Cloudberry Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO foo SELECT generate_series(0,10);
INSERT INTO test SELECT generate_series(0,10);
select count(*) from foo,test where foo.a=test.a;
 count 
-------
    11
(1 row)

DROP TABLE foo;
DROP TABLE test;
\c gpperfmon
select pg_sleep(100);
 pg_sleep 
----------
 
(1 row)

analyze system_history;
analyze database_history;
analyze diskspace_history;
analyze queries_history;
select count(*) > 0 from system_now;
 ?column? 
----------
 t
(1 row)

select count(*) > 0 from database_now;
 ?column? 
----------
 t
(1 row)

select count(*) > 0 from diskspace_now;
 ?column? 
----------
 t
(1 row)

select count(*) > 0 from system_history;
 ?column? 
----------
 t
(1 row)

select count(*) > 0 from database_history;
 ?column? 
----------
 t
(1 row)

select count(*) > 0 from diskspace_history;
 ?column? 
----------
 t
(1 row)

select status, query_text, length(query_plan) > 0 from queries_history
where ssid = :sess_id and 
query_text = 'select count(*) from foo,test where foo.a=test.a;';
 status |                    query_text                     | ?column? 
--------+---------------------------------------------------+----------
 done   | select count(*) from foo,test where foo.a=test.a; | t
(1 row)

